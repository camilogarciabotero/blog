{
  "hash": "c68848341f7109f2d6c145828444b5b3",
  "result": {
    "markdown": "---\ntitle: \"Artists in the USA\"\nformat: html\ncategories: [tidytuesday, code, analysis]\ntoc: true\ndate: 2021-09-27\n---\n\n\nThis post covers the code and figures from the datascience workshop with R, where we explore some basics from `dplyr` and `ggplot2` packages using the `tidytuesday` data set from the current week (2021-09-27). \n\n# Importing libraries\n\n\n::: {.cell hash='artists_cache/html/unnamed-chunk-1_34e23575c735c44c9bb3691d37772caf'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.4.1 \n✔ readr   2.1.2      ✔ forcats 0.5.1 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n# Importing data from TT\n\n\n::: {.cell hash='artists_cache/html/unnamed-chunk-2_e787d281906c43f100b799f78138dfe5'}\n\n```{.r .cell-code}\nartists <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-27/artists.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3380 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): state, race, type\ndbl (4): all_workers_n, artists_n, artists_share, location_quotient\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell hash='artists_cache/html/unnamed-chunk-3_9439eeec4cb5251402b7389c6d4e03f9'}\n\n```{.r .cell-code}\nartists\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,380 × 7\n   state                race     type       all_worke…¹ artis…² artist…³ locat…⁴\n   <chr>                <chr>    <chr>            <dbl>   <dbl>    <dbl>   <dbl>\n 1 Alabama              Hispanic Architects       88165      45  5.10e-4   0.875\n 2 Alaska               Hispanic Architects       26875      15  5.58e-4   0.957\n 3 Arizona              Hispanic Architects     1033370     270  2.61e-4   0.448\n 4 Arkansas             Hispanic Architects      101405      NA NA        NA    \n 5 California           Hispanic Architects     7470730    3870  5.18e-4   0.888\n 6 Colorado             Hispanic Architects      594525     200  3.36e-4   0.577\n 7 Connecticut          Hispanic Architects      288845     150  5.19e-4   0.891\n 8 Delaware             Hispanic Architects       41365       0 NA        NA    \n 9 District of Columbia Hispanic Architects       44885     185  4.12e-3   7.07 \n10 Florida              Hispanic Architects     2752995    2900  1.05e-3   1.81 \n# … with 3,370 more rows, and abbreviated variable names ¹​all_workers_n,\n#   ²​artists_n, ³​artists_share, ⁴​location_quotient\n```\n:::\n:::\n\n\n## Data manipulation\n\n\n::: {.cell hash='artists_cache/html/unnamed-chunk-4_84f28145e6ddb9503d2d78e34335dc90'}\n\n```{.r .cell-code}\nall_artists <- artists |>\n  mutate(across(state:type, as_factor)) |>\n  drop_na(artists_n) |>\n  group_by(race) |>\n  summarize(n = sum(artists_n))\n```\n:::\n\n::: {.cell hash='artists_cache/html/unnamed-chunk-5_0df1ca35f31956fac18f1c1e1dc42d9e'}\n\n```{.r .cell-code}\nall_artists\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  race                   n\n  <fct>              <dbl>\n1 Hispanic          263555\n2 White            1763570\n3 African-American  144180\n4 Asian             152650\n5 Other              68378\n```\n:::\n:::\n\n\n\n## Data visualization\n\n\n::: {.cell autoanimate='true' hash='artists_cache/html/unnamed-chunk-6_2faced2301c01b3b574239e5abe6fb69'}\n\n```{.r .cell-code}\nggplot(all_artists) +\n  aes(y = reorder(race, n), x = n, fill = race, label = n) +\n  geom_col() +\n  geom_text() +\n  theme_bw() +\n  theme(\n    legend.position = \"none\",\n    axis.title.y = element_blank()\n  ) +\n  labs(\n    title = \"Number of artists across USA according to race\"\n  )\n```\n\n::: {.cell-output-display}\n![](artists_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Alluvial plots\n\n\n::: {.cell hash='artists_cache/html/unnamed-chunk-7_b4f8e94ce8f5e3b15710e991378f6197'}\n\n```{.r .cell-code}\nfactored_artists <- artists |>\n  mutate(across(state:type, as_factor)) |> \n  group_by(race, type, state) |> \n  summarise(artists_n) |>\n  drop_na()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'race', 'type'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n::: {.cell hash='artists_cache/html/unnamed-chunk-8_71632efc1234976c0aab30e4ee83be5f'}\n\n```{.r .cell-code}\nlibrary(ggalluvial)\nlibrary(ggfittext)\n\nggplot(factored_artists) +\n  aes(y = artists_n, axis1 = race, axis2 = type, fill = race) +\n  geom_stratum(alpha = .5) +\n  geom_alluvium() +\n  geom_fit_text(stat = \"stratum\", aes(label = after_stat(stratum))) +\n  theme_bw() +\n  theme(\n    legend.position = \"none\"\n  ) +\n  scale_fill_viridis_d() +\n  labs(\n    y = \"\"\n  )\n```\n\n::: {.cell-output-display}\n![](artists_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}